<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Validering</title>
    <script src="../assets/js/regex.js"></script>
    <style>
        .error {
            border-color: red;
        }
        .errormessage {
            color: red;
        }
    </style>
    <script>
        // Function definition - tager form element som parameter
        function validate(formElm) {

            // Var state angiver om formen kan sendes (true/false)
            let state = true;

            // Samler alle input felter med attributten required i et array
            const inputs = document.querySelectorAll(':required');

            // Looper array inputs og tildeler værdier til var input
            for(let input of inputs) {
                // Hvis input feltets value ikke eksisterer...
                if(!input.value) {
                    // Sætter var med fejlbesked og og bruger innerText fra elementets foregående sibling (label elementet)
                    let strError = `Du skal udfylde feltet ${input.previousElementSibling.innerText.toLowerCase()}`;
                    // Kalder setError funktion på med input element
                    setError(input, strError);
                    // Sætter state til false
                    state = false;
                    // Afbryder validate funktionen med return false
                    return false;
                }

                // Hvis input type er email...
                if(input.type === 'email') {
                    // bruger regex funktion til at tjekke email syntaks
                    if(!isValidEmail(input.value)) {
                        // Kalder setError funktion med input element og speciel fejl besked
                        setError(input, 'Du skal indtaste en gyldig email adresse');
                        state = false;
                        return false;
                    }
                }

            }

            // Hvis state er true (er alle inputs korrekt udfyldt)
            if (state) {
                // Opretter div element i DOM'en
                let div = document.createElement('div');
                // Sætter attribut id på div element
                div.setAttribute('id','formmessage');
                // Sætter innerText i div elementet
                div.innerText = 'Formularen er sendt!';
                // Sætter konstant med element som har id'et main
                const main = document.getElementById('main');
                // Tilføjer div element som sidste child element i main elementet
                main.appendChild(div);
            }
        }

        // Function definition - tager input element og tekstbesked med standardværdi som parameter
        function setError(element, message) {
            // Tilføjer klasse til input elementet (rød border)
            element.classList.add('error');
            // Hvis elementet IKKE har en efterfølgende sibling...
            if (!element.nextElementSibling) {
                // Deklarerer var til html output (span element) med fejlmeddelelse 
                let strError = `<span class="errormessage">${message}</span>`;
                // Indsætter html efter input elementets afslutning 
                element.insertAdjacentHTML('afterend', strError);
            }
            // Sætter keydown event på input elementet
            // Når der tastes i input elementet skal fejl meddelelsen fjernes 
            element.addEventListener('keydown', function() {
                // Hvis elementet har en efterfølgende sibling...
                if(element.nextElementSibling) {
                    // fjern sibling
                    element.nextElementSibling.remove();
                }
                // Fjern error class (rød border) fra elementet
                element.classList.remove('error');
            })
        }
    </script>
</head>

<body>
    <form>
        <!-- 
            Hvert input element skal ligge i den følgende orden:
            
            parent-node (div, p, section mm)
                - label
                - input
            
        -->
        <div>
            <label for="name">Navn</label>:
            <input type="text" id="name" required placeholder="Indtast navn" />
        </div>
        <div>
            <label for="email">Email</label>:
            <input type="email" id="email"  required placeholder="Indtast email" />
        </div>
        <div>
            <label for="address">Adresse</label>:
            <input type="text" id="address" placeholder="Indtast adresse" />
        </div>
        <div>
            <label for="zipcode">Postnummer</label>:
            <input type="number" id="zipcode"  placeholder="Indtast postnummer" />
        </div>
        <div>
            <!-- 
                button med et onclick event som kalder validate funktionen 
                med hele form elementet som argument (this.form) 
            -->
            <button type="button" onclick="validate(this.form)">Send</button>
            <button type="reset">Nulstil felter</button>
        </div>
    </form>

    <div id="main">
    </div>

</body>
</html>